options {
  STATIC = false;
}

PARSER_BEGIN(Parser)

package org.regis.jlisp;

import java.util.List;
import java.util.LinkedList;
import org.regis.jlisp.Symbol;
import org.regis.jlisp.SExpression;

public class Parser {

  /** Main entry point. */
  public static void main(String args[]) throws ParseException {
    Parser parser = new Parser(System.in);
    List<SExpression> list = parser.parse();
    for (SExpression sexp : list) {
      System.out.println(sexp.list);
    }
  }

}

PARSER_END(Parser)

TOKEN :
{
  < BOOL: "true" | "false" >
| < INTEGER: ("-")? ["1"-"9"] (["0"-"9"])* >
| < STRING: "\"" (~["\""])* "\"" >
| < SYMBOL: (["a"-"z"] | ["A"-"Z"] | ["+", "-", "*", "/", ">", "<", "=", "-", "_", "&", "|", "!", "~", "^", "."])+ >
}

/** Root production. */

List<SExpression> parse() :
{}
{
  { List<SExpression> sexps = new LinkedList();
    SExpression sexp = null;
  }
  (sexp = sexp() ("\n"|"\r")+ { sexps.add(sexp); } )+ <EOF>
  { return sexps; }
}

Object element() :
{}
{
  { Object obj = null; }
( <BOOL> { obj = Boolean.valueOf(token.image); }
| <INTEGER> { obj = Integer.valueOf(token.image); }
| <SYMBOL> { obj = new Symbol(token.image); }
| <STRING> { obj = token.image.substring(1, token.image.length() - 1); }
| { obj = sexp(); }
)
  { return obj; }
}

List elements() :
{}
{
  { List list = new LinkedList(); }
  { list.add(element()); } (" " { list.add(element()); } )*
  { return list; }
}

SExpression sexp() :
{}
{
  { List list = null; }
  "(" { list = elements(); } ")"
  {
    SExpression sexp = new SExpression();
    sexp.list = (LinkedList) list;
    return sexp;
  }
}
